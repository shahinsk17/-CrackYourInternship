Question : Valid Parentheses
--------------------------------------------------------------------------

class Solution {
public:
    bool isValid(string str) {
      stack<char>s;

      for(int i=0;i<str.size();i++)
      {
        if(s.empty())
        {
               s.push(str[i]);
        }
        else if((s.top()=='(' && str[i]==')') || ( s.top()=='[' && str[i]==']' ) || (s.top()=='{' && str[i]=='}'))
        {
            s.pop();
        }
        else{

            s.push(str[i]);
            
        }
      }
         return s.empty();
      
    }
};
Question : Print all the duplicate characters in a string
-------------------------------------------------------------------------

#include <algorithm>
#include <iostream>
#include <string>
#include<vector>
using namespace std;

void printDuplicates(string str)
{    vector<int>count(26,0);

      for(int i=0;i<str.size();i++)
      {   count[str[i]-'a']++;
         
      }
 for(int i=0;i<26;i++)
 {   if(count[i]>1){
    cout << char(i + 'a') << ", count = " << count[i] << endl;
     }
 }
}
int main()
{
    string str = "test string";
    printDuplicates(str);
    return 0;
}


Question :Reverse Words in a String
------------------------------------------------------------------------------------------
class Solution {
public:
    string reverseWords(string s) {
        reverse(s.begin(), s.end());

        int l = 0, r = 0, i = 0;
        while (i < s.size()) {

            while (i < s.size() && s[i] == ' ') {
                i++;
            }
            if (i == s.size()) {
                break;
            }
            while (i < s.size() && s[i] != ' ') {
                s[r++] = s[i++];
            }
            reverse(s.begin() + l, s.begin() + r);
            s[r++] = ' ';
            l = r;
            i++;
        }
        // to remove last space we use resize
        s.resize(r - 1);

        return s;
    }
};
